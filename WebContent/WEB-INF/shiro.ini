[main]
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager

# Use the configured native session manager:
securityManager.sessionManager = $sessionManager

# Use the Aerospike Session DAO
sessionDAO = com.aerospike.shiro.AerospikeSessionDAO
securityManager.sessionManager.sessionDAO = $sessionDAO

# 1,800,000 milliseconds = 30 minutes
# Aerospike Session DAO configuration
# Session timeout expressed in milliseconds
sessionDAO.globalSessionTimeout = 1800000

# Namespace to use for the session store
sessionDAO.namespace = test

# Setname to use for the session store
sessionDAO.setname = sessions

# Hostname for the Aerospike cluster
sessionDAO.hostname = localhost

# Port for the Aerospike cluster
sessionDAO.port = 3000

# rely on the TTL in the aerospike session record to purge old sessions
securityManager.sessionManager.sessionValidationSchedulerEnabled = false

# cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
# securityManager.cacheManager = $cacheManager

shiro.loginUrl = /login.jsp

[users]
# format: username = password
user = password

[urls]
# The /login.jsp is not restricted to authenticated users (otherwise no one could log in!), but
# the 'authc' filter must still be specified for it so it can process that url's
# login submissions. It is 'smart' enough to allow those requests through as specified by the
# shiro.loginUrl above.
/login.jsp = authc
/logout = logout
/account/** = authc
